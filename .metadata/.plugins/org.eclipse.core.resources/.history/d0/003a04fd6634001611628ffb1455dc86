package umc.sd.banco;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class Conta {
	
	private int id;
	private String nome;
	private String senha;
	private double saldo;
	
	
	
	public void setId(int id) {
		this.id = id;
	}
	public int getId() {
		return id;
	}
	private void setNome(String nome) {
		this.nome = nome;
	}
	public String getNome() {
		return nome;
	}
	private void setSaldo(double saldo) {
		this.saldo = saldo;
	}
	public double getSaldo() {
		return saldo;
	}
	
	public void setSenha(String senha) {
		this.senha = senha;
	}
	
	public String getSenha() {
		return senha;
	}
	

	/**
	 * Atualiza o BD retirando o valor quantia do saldo atual da conta
	 * 
	 * @param quantia 	a quantia desejada para realizar o saque
	 * @return		Boolean indicando se operação obteve sucesso
	 */
	public boolean saque(double quantia) {
		recuperar();
		
		System.out.println(getSaldo());
		
		if((saldo >= quantia)&&(quantia > 0)){
			
			Connection con = null;
			
			PreparedStatement pstmt = null;
			
			try{
				
				con = this.getConexao();
				
				pstmt = con.prepareStatement("update conta set saldo = saldo - ? where id = ? ");
				pstmt.setDouble(1, quantia);
				pstmt.setInt(2, this.getId());
				pstmt.execute();
				con.close();
				
			}
			catch(Exception e){
				System.out.println("Uma falha de conexão: "+ e.getMessage());
				e.printStackTrace();
			}
			return true;
		}
		else{			
			return false;
		}
		
	}
	

	/**
	 * Atualiza o BD adicionando a quantia do depósito ao saldo atual da conta
	 * 
	 * @param quantia	A quantia a ser adicionada ao saldo
	 * @return		Boolean indicando se operação obteve sucesso
	 */
	public boolean deposito(double quantia) {
		recuperar();
		
		System.out.println(getSaldo());
		
		if (quantia > 0){
			
			Connection con = null;
			
			PreparedStatement pstmt = null;
			
			try{
				
				con = this.getConexao();
				
				pstmt = con.prepareStatement("update conta set saldo = saldo + where id = ?");
				
				pstmt.setDouble(1, quantia);
				
				pstmt.setInt(2, this.getId());
				
				pstmt.execute();
				
				con.close();
				
			}
			catch(Exception e){
				System.out.println("Falha de conexão: "+ e.getMessage());
				e.printStackTrace();
				
			}
			
			return true;
			
		}
		else {
			
			return false;
			
		}
	}
	
	/*	Cadastro  */
	
	public boolean cadastrar (int idConta, String nome, double saldo, String senha ){
		
		Connection con = null;
		
		PreparedStatement pstmt = null;
		
		try {
			
			con = this.getConexao();
			
			pstmt = con.prepareStatement("insert into conta (idconta ,nome, saldo, senha) values (?, ?, ?, ?)");
			
			idConta = getId();
			
			saldo = getSaldo();
			
			pstmt.setInt(1, idConta);
			
			pstmt.setString(2, nome);
			
			pstmt.setDouble(3, saldo);
			
			pstmt.setString(4, senha);
			
			pstmt.execute();
			
			con.close();
			return true;
		
		}
		catch(Exception e) {
			System.out.println("Falha de conexão: " + e.getMessage());
			e.printStackTrace();
			return false;
		}
	}
	
	/**
	 * Consulta no BD as informações da conta dado o valor salvo no atributo id
	 * @return		Boolean indicando se operação obteve sucesso
	 */
	public boolean recuperar() {
		System.out.println("Dentro do método recuperar()");
		
		boolean resultado = false;
		Connection con = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
        
        try {
        	con = this.getConexao();
        	stmt = con.prepareStatement("SELECT * FROM conta WHERE idconta = ?");
			stmt.setInt(1, this.getId());
			rs = stmt.executeQuery();

			if (rs.next()) {
				this.setNome(rs.getString("nome"));
				this.setSaldo(rs.getDouble("saldo"));
				resultado = true;
			}
			
			con.close();
			
        } catch (Exception e) {
        	System.out.println("Erro no método recuperar: " + e.getMessage());
			e.printStackTrace();
        }
		
        return resultado;
	}
	
	
	/**
	 * Realiza a conexão com o banco de dados
	 * @return	O objeto da conexão, null se houver erro
	 */
	private Connection getConexao() {
		Connection con = null;

        try{
           String url ="jdbc:postgresql://localhost:5432/dbbanco";
           String usuario="postgres";
           String senha = "postgres";
           Class.forName("org.postgresql.Driver");
           con = DriverManager.getConnection(url,usuario,senha);
           System.out.println("Conexão realizada com sucesso.");
        }catch(Exception e) {
            System.out.println("Falha de conexão: " + e.getMessage());
        }

        return con;
	}
	
}
